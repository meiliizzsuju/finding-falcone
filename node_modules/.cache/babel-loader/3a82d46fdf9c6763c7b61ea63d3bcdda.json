{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js\";\nimport React, { Component } from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectPlanet = event => {\n      this.props.selectItem(this.props.name, event.target.value);\n      this.props.revealnextBox(this.props.dropdownId, event.target);\n    };\n\n    this.onSelectVehicles = event => {\n      console.log(\"onSelectVehicles\");\n      this.props.selectVehicle(this.props.name, event.target.value, event.target);\n    };\n\n    this.getFilteredVehicles = name => {\n      console.log('getFilteredVehicles'); // const removedItems = { ...selectedPlanet};\n      // delete removedItems[name];\n      // const removedItemsList = Object.values(removedItems);\n      // return planets.filter(item => {\n      //   return !removedItemsList.includes(item.name);\n      // });\n\n      return this.props.vehicles;\n    };\n\n    this.reveal = this.props.reveal ? 'reveal' : '';\n    this.containerClass = 'destination-box' + ' ' + this.reveal; // spacing for classname\n\n    this.selectClass = 'destination_dropdown_' + this.props.id;\n    console.log(\"this.props.vehicles\");\n    console.log(this.props.vehicles);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.containerClass,\n        id: 'destination_' + this.props.id,\n        \"data-destination-container\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destination-box_top_title\",\n            children: [\"Destination \", this.props.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-box_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: this.selectClass,\n              onChange: this.onSelectPlanet,\n              value: this.props.value,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose from the option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this), this.props.planets.map((planet, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet.name,\n                  distance: planet.distance,\n                  index: index,\n                  children: planet.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), this.props.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicles\",\n            \"data-type\": \"vehicles-checkbox\",\n            \"data-radio-checkbox\": true,\n            id: 'vehicles_' + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              id: 'vehicles_group_' + this.props.id,\n              onChange: this.onSelectVehicles,\n              children: this.props.vehicles.map((vehicle, index) => {\n                return /*#__PURE__*/_jsxDEV(VehicleRadio, {\n                  vehicle: this.getFilteredVehicles(this.props.name),\n                  groupid: 'vehicles_group_' + this.props.id,\n                  name: this.props.name,\n                  index: index,\n                  id: index + 1\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : 'No vehicle data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js"],"names":["React","Component","Fragment","VehicleRadio","PlanetDropdown","constructor","props","onSelectPlanet","event","selectItem","name","target","value","revealnextBox","dropdownId","onSelectVehicles","console","log","selectVehicle","getFilteredVehicles","vehicles","reveal","containerClass","selectClass","id","render","planets","map","planet","index","distance","length","vehicle"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box'+' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    console.log(\"this.props.vehicles\")\n    console.log(this.props.vehicles)\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n    console.log('getFilteredVehicles')\n    // const removedItems = { ...selectedPlanet};\n    // delete removedItems[name];\n    // const removedItemsList = Object.values(removedItems);\n    // return planets.filter(item => {\n    //   return !removedItemsList.includes(item.name);\n    // });\n    return this.props.vehicles\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}>\n              <option>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\">\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.props.vehicles.map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={this.getFilteredVehicles(this.props.name)} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index}></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}