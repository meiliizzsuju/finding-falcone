{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js\";\nimport $ from 'jquery';\nimport React, { Component } from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectPlanet = event => {\n      this.props.selectItem(this.props.name, event.target.value);\n      this.props.revealnextBox(this.props.dropdownId, event.target);\n    };\n\n    this.onSelectVehicles = event => {\n      console.log(\"onSelectVehicles\");\n      this.props.selectVehicle(this.props.name, event.target.value, event.target);\n      console.log(event.target); // to the closest fieldset parent\n\n      let fieldsetWrapper = $(event.target).closest('fieldset');\n      let fieldsetWrapperID = fieldsetWrapper[0].id;\n      let thisFieldItems = fieldsetWrapper.children('input');\n      fieldsetWrapper.attr('selected', true);\n      thisFieldItems.removeAttr('test', false);\n      thisFieldItems.each((i, name) => {\n        // checked on selected one\n        if (event.target.value.toLowerCase() === name.value.toLowerCase()) {\n          console.log(\"this is :\" + name.value);\n          console.log(this.props.selectedVehicle); // for(var i = 0; i<this.props.selectedVehicleAvial.length; i++){\n          //   if(this.props.selectedVehicleAvial[i].name.toLowerCase() === name.value.toLowerCase()){\n          //     let availNo = this.props.selectedVehicleAvial[i].total_no;\n          //     if(availNo !== 0){\n          //       console.log('still has it')\n          //       console.log(this.props.selectedVehicle)\n          //     }\n          //     console.log(this.props.selectedVehicleAvial[i]);\n          //     console.log(\"availNo :\"+availNo);\n          //     // selectedVehicleAvial();\n          //   }\n          // }\n        }\n      }); // decease total_no -1 per select selectedVehicleAvial\n\n      console.log(\"thisFieldItems\");\n      console.log(thisFieldItems); // console.log('value selected :'+value)\n      // const removedItems = { ...selectedPlanet};\n      // delete removedItems[name];\n      // const removedItemsList = Object.values(removedItems);\n      // return planets.filter(item => {\n      //   return !removedItemsList.includes(item.name);\n      // });\n    };\n\n    this.getFilteredVehicles = name => {\n      let obVbyD = Object(this.props.VbyD);\n      console.log(\"name\");\n      console.log(name);\n      console.log(\"This obVbyD\");\n      console.log(obVbyD[name]);\n      console.log('obVbyD[name].VbyDdata');\n      console.log(obVbyD[name].VbyDdata);\n      console.log('this.props.vehicles');\n      console.log(this.props.vehicles);\n      /*\n      const removedItems = { ...selectedPlanet};\n      delete removedItems[name];\n      const removedItemsList = Object.values(removedItems);\n      return planets.filter(item => {\n        return !removedItemsList.includes(item.name);\n      });\n      */\n      // const selectedVehicle = { ...this.props.selectedVehicle};\n      // console.log(\"selectedVehicle\");\n      // console.log(selectedVehicle);\n      // // delete selectedVehicle[name];\n      // const updatedAvailList = Object.values(selectedVehicle);\n      // console.log(\"updatedAvailList\")\n      // console.log(updatedAvailList)\n      // return this.props.vehicles.filter(item => {\n      //   return !updatedAvailList.includes(item.name);\n      // });\n\n      return this.props.vehicles;\n    };\n\n    this.reveal = this.props.reveal ? 'reveal' : '';\n    this.containerClass = 'destination-box' + ' ' + this.reveal; // spacing for classname\n\n    this.selectClass = 'destination_dropdown_' + this.props.id;\n    console.log(\"this.props.vehicles\");\n    console.log(this.props.vehicles);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.containerClass,\n        id: 'destination_' + this.props.id,\n        \"data-destination-container\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destination-box_top_title\",\n            children: [\"Destination \", this.props.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-box_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: this.selectClass,\n              onChange: this.onSelectPlanet,\n              value: this.props.value,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose from the option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this), this.props.planets.map((planet, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet.name,\n                  distance: planet.distance,\n                  index: index,\n                  children: planet.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), this.props.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicles\",\n            \"data-type\": \"vehicles-checkbox\",\n            \"data-radio-checkbox\": true,\n            id: 'vehicles_' + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              id: 'vehicles_group_' + this.props.id,\n              onChange: this.onSelectVehicles,\n              children: this.getFilteredVehicles(this.props.name).map((vehicle, index) => {\n                return /*#__PURE__*/_jsxDEV(VehicleRadio, {\n                  vehicle: vehicle,\n                  groupid: 'vehicles_group_' + this.props.id,\n                  name: this.props.name,\n                  index: index,\n                  id: index + 1\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : 'No vehicle data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js"],"names":["$","React","Component","Fragment","VehicleRadio","PlanetDropdown","constructor","props","onSelectPlanet","event","selectItem","name","target","value","revealnextBox","dropdownId","onSelectVehicles","console","log","selectVehicle","fieldsetWrapper","closest","fieldsetWrapperID","id","thisFieldItems","children","attr","removeAttr","each","i","toLowerCase","selectedVehicle","getFilteredVehicles","obVbyD","Object","VbyD","VbyDdata","vehicles","reveal","containerClass","selectClass","render","planets","map","planet","index","distance","length","vehicle"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport React, { Component } from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box'+' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    console.log(\"this.props.vehicles\")\n    console.log(this.props.vehicles)\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n\n\n\n    console.log(event.target)\n    // to the closest fieldset parent\n    let fieldsetWrapper = $(event.target).closest('fieldset');\n    let fieldsetWrapperID = fieldsetWrapper[0].id;\n    let thisFieldItems = fieldsetWrapper.children('input');\n\n    fieldsetWrapper.attr('selected',true)\n    thisFieldItems.removeAttr('test',false);\n    thisFieldItems.each( (i,name) =>{\n      // checked on selected one\n      if(event.target.value.toLowerCase() === name.value.toLowerCase()){\n        console.log(\"this is :\" + name.value)\n        console.log(this.props.selectedVehicle)\n        // for(var i = 0; i<this.props.selectedVehicleAvial.length; i++){\n        //   if(this.props.selectedVehicleAvial[i].name.toLowerCase() === name.value.toLowerCase()){\n        //     let availNo = this.props.selectedVehicleAvial[i].total_no;\n        //     if(availNo !== 0){\n        //       console.log('still has it')\n        //       console.log(this.props.selectedVehicle)\n        //     }\n        //     console.log(this.props.selectedVehicleAvial[i]);\n        //     console.log(\"availNo :\"+availNo);\n        //     // selectedVehicleAvial();\n        //   }\n        // }\n      }\n    })\n    // decease total_no -1 per select selectedVehicleAvial\n    console.log(\"thisFieldItems\")\n    console.log(thisFieldItems)\n\n    \n    // console.log('value selected :'+value)\n\n    // const removedItems = { ...selectedPlanet};\n    // delete removedItems[name];\n    // const removedItemsList = Object.values(removedItems);\n    // return planets.filter(item => {\n    //   return !removedItemsList.includes(item.name);\n    // });\n\n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n    let obVbyD = Object(this.props.VbyD);\n    console.log(\"name\")\n    console.log(name)\n    console.log(\"This obVbyD\")\n    console.log(obVbyD[name])\n    console.log('obVbyD[name].VbyDdata')\n    console.log(obVbyD[name].VbyDdata)\n    console.log('this.props.vehicles')\n    console.log(this.props.vehicles)\n    /*\n    const removedItems = { ...selectedPlanet};\n    delete removedItems[name];\n    const removedItemsList = Object.values(removedItems);\n    return planets.filter(item => {\n      return !removedItemsList.includes(item.name);\n    });\n    */\n    // const selectedVehicle = { ...this.props.selectedVehicle};\n    // console.log(\"selectedVehicle\");\n    // console.log(selectedVehicle);\n    // // delete selectedVehicle[name];\n    // const updatedAvailList = Object.values(selectedVehicle);\n    // console.log(\"updatedAvailList\")\n    // console.log(updatedAvailList)\n    // return this.props.vehicles.filter(item => {\n\n    //   return !updatedAvailList.includes(item.name);\n    // });\n    return this.props.vehicles\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}>\n              <option>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\">\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.getFilteredVehicles(this.props.name).map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={vehicle} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index}></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}