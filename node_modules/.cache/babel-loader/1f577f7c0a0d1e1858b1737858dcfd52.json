{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/Calculate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculate = _ref => {\n  let {\n    selectedVehicle,\n    selectedPlanet,\n    vehicles,\n    planets\n  } = _ref;\n  const selectedVehicleOb = Object.values(selectedVehicle);\n  const selectedPlanetOb = Object.values(selectedPlanet);\n  console.log(\"selectedPlanet\");\n  console.log(selectedPlanet);\n\n  const getTime = () => {\n    let timeTaken = 0;\n    let totalDistance = 0;\n    let totalSpeed = 0;\n\n    for (let d = 0; d < selectedPlanetOb.length; d++) {\n      // get the destination distance\n      let destination = planets.filter(obj => {\n        return obj.name === selectedPlanetOb[d];\n      });\n      totalDistance = totalDistance + destination[0].distance;\n    }\n\n    console.log(\"totalDistance\");\n    console.log(totalDistance);\n\n    for (let i = 0; i < selectedVehicleOb.length; i++) {\n      var timeTakenPerhourForVehicle = 0; // match the list to get ditance and speed\n\n      let vehicle = vehicles.filter(obj => {\n        return obj.name === selectedVehicleOb[i];\n      });\n      totalSpeed = totalSpeed + vehicle[0].speed;\n    } // total dictance / total speed\n\n\n    timeTaken = totalDistance / totalSpeed;\n    return timeTaken;\n  };\n\n  getTime();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"missioncontroll_cal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missioncontroll_cal-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"missioncontroll_cal-label\",\n        children: \"Time taken :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"missioncontroll_cal-result\",\n        selectedVehicle: selectedVehicle,\n        children: getTime()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Calculate;\nexport default Calculate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculate\");","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/Calculate.js"],"names":["React","Calculate","selectedVehicle","selectedPlanet","vehicles","planets","selectedVehicleOb","Object","values","selectedPlanetOb","console","log","getTime","timeTaken","totalDistance","totalSpeed","d","length","destination","filter","obj","name","distance","i","timeTakenPerhourForVehicle","vehicle","speed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAAyD;AAAA,MAAxD;AAACC,IAAAA,eAAD;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,GAAwD;AACzE,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcN,eAAd,CAA1B;AACA,QAAMO,gBAAgB,GAAGF,MAAM,CAACC,MAAP,CAAcL,cAAd,CAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;;AAEA,QAAMS,OAAO,GAAG,MAAK;AAEnB,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,UAAU,GAAG,CAAjB;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGP,gBAAgB,CAACQ,MAAnC,EAA2CD,CAAC,EAA5C,EAA+C;AAC7C;AACA,UAAIE,WAAW,GAAGb,OAAO,CAACc,MAAR,CAAeC,GAAG,IAAI;AACtC,eAAOA,GAAG,CAACC,IAAJ,KAAaZ,gBAAgB,CAACO,CAAD,CAApC;AACD,OAFiB,CAAlB;AAIAF,MAAAA,aAAa,GAAGA,aAAa,GAAGI,WAAW,CAAC,CAAD,CAAX,CAAeI,QAA/C;AACD;;AAEDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;;AACA,SAAI,IAAIS,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGjB,iBAAiB,CAACW,MAApC,EAA4CM,CAAC,EAA7C,EAAgD;AAC9C,UAAIC,0BAA0B,GAAG,CAAjC,CAD8C,CAG9C;;AACA,UAAIC,OAAO,GAAGrB,QAAQ,CAACe,MAAT,CAAgBC,GAAG,IAAI;AACnC,eAAOA,GAAG,CAACC,IAAJ,KAAaf,iBAAiB,CAACiB,CAAD,CAArC;AACD,OAFa,CAAd;AAKAR,MAAAA,UAAU,GAAGA,UAAU,GAAGU,OAAO,CAAC,CAAD,CAAP,CAAWC,KAArC;AAED,KA3BkB,CA6BnB;;;AACAb,IAAAA,SAAS,GAAGC,aAAa,GAACC,UAA1B;AAIA,WAAOF,SAAP;AACD,GAnCD;;AAqCAD,EAAAA,OAAO;AAEP,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAA6C,QAAA,eAAe,EAAEV,eAA9D;AAAA,kBACGU,OAAO;AADV;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzDD;;KAAMX,S;AA2DN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nconst Calculate = ({selectedVehicle,selectedPlanet, vehicles, planets}) => {\n  const selectedVehicleOb = Object.values(selectedVehicle)\n  const selectedPlanetOb = Object.values(selectedPlanet)\n  console.log(\"selectedPlanet\")\n  console.log(selectedPlanet)\n\n  const getTime = () =>{\n\n    let timeTaken = 0;\n    let totalDistance = 0;\n    let totalSpeed = 0;\n    for(let d =0; d < selectedPlanetOb.length; d++){\n      // get the destination distance\n      let destination = planets.filter(obj => {\n        return obj.name === selectedPlanetOb[d]\n      })\n\n      totalDistance = totalDistance + destination[0].distance;\n    }\n\n    console.log(\"totalDistance\")\n    console.log(totalDistance)\n    for(let i =0; i < selectedVehicleOb.length; i++){\n      var timeTakenPerhourForVehicle = 0;\n\n      // match the list to get ditance and speed\n      let vehicle = vehicles.filter(obj => {\n        return obj.name === selectedVehicleOb[i]\n      })\n\n\n      totalSpeed = totalSpeed + vehicle[0].speed\n\n    }\n\n    // total dictance / total speed\n    timeTaken = totalDistance/totalSpeed\n\n\n\n    return timeTaken\n  }\n\n  getTime();\n  \n  return (\n    <div className=\"missioncontroll_cal\">\n      <div className=\"missioncontroll_cal-box\">\n        <span className=\"missioncontroll_cal-label\">\n          Time taken :\n        </span>\n        <span className=\"missioncontroll_cal-result\" selectedVehicle={selectedVehicle}>\n          {getTime()}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculate;\n"]},"metadata":{},"sourceType":"module"}