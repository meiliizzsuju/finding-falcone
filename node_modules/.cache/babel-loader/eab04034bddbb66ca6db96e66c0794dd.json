{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js\";\nimport $ from 'jquery';\nimport React from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.disableSpaceOption = (i, e) => {\n      let thisContainer = $(e.target).parents('[data-destination-container]');\n      let thisRadioBox = $(thisContainer).find('[data-radio-checkbox]');\n      let radioswrapper = $(thisRadioBox).find('fieldset');\n      let radios = $(radioswrapper).find('[data-distance]');\n      let noAvailClass = 'not-avail';\n      $(radios).removeClass(noAvailClass);\n      let planetData = this.props.allplanets.filter(obj => {\n        return obj.name === i;\n      }); // if space ship max distance < planetData.distance : hide the space ship\n\n      for (let r = 0; r < radios.length; r++) {\n        var spaceDistance = $(radios[r]).data('distance');\n\n        if (parseInt(spaceDistance) < parseInt(planetData[0].distance)) {\n          $(radios[r]).addClass(noAvailClass);\n        }\n      }\n    };\n\n    this.onSelectPlanet = event => {\n      this.props.selectItem(this.props.name, event.target.value);\n      this.props.revealSpaceOptions(this.props.dropdownId, event.target);\n      this.disableSpaceOption(event.target.value, event);\n    };\n\n    this.onSelectVehicles = event => {\n      console.log(\"onSelectVehicles\");\n      this.props.selectVehicle(this.props.name, event.target.value, event.target);\n      this.props.revealnextBox(this.props.dropdownId, event.target);\n    };\n\n    this.getFilteredVehicles = name => {\n      console.log('getFilteredVehicles');\n      let targetListdata; // loop per destination box\n\n      this.props.VbyD.forEach(obItem => {\n        if (obItem.desno.toLowerCase() === name.toLowerCase()) {\n          let selectedItems = { ...this.props.selectedVehicle\n          };\n          let selectedItemsList = Object.values(selectedItems);\n          let selectedKeyItemsList = Object.keys(selectedItems);\n\n          if (selectedItemsList.length > 0) {\n            return selectedKeyItemsList.forEach(selectedKey => {\n              if (obItem.desno.toLowerCase() === selectedKey.toLowerCase()) {\n                return obItem.data.VbyDdata.forEach(shipData => {\n                  if (shipData.name.toLowerCase() === selectedItems[selectedKey].toLowerCase()) {\n                    if (this.updatedState.length === 0) {\n                      let updatestate = {};\n                      updatestate.name = shipData.name.toLowerCase();\n                      updatestate.updated = true;\n                      this.updatedState.push(updatestate);\n                      this.setState(updatestate);\n                      shipData.total_no = shipData.total_no - 1;\n                      return;\n                    }\n                  }\n                });\n              }\n            });\n          }\n        }\n\n        return targetListdata = Object(obItem.data.VbyDdata);\n      });\n      return targetListdata;\n    };\n\n    this.reveal = this.props.reveal ? 'reveal' : '';\n    this.containerClass = 'destination-box' + ' ' + this.reveal; // spacing for classname\n\n    this.selectClass = 'destination_dropdown_' + this.props.id;\n    this.updatedState = [];\n    console.log(\"check this\");\n    console.log('this.props.selectedPlanet');\n    console.log(this.props.selectedPlanet);\n  } // hide space that cant reac to the planet\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.containerClass,\n        id: 'destination_' + this.props.id,\n        \"data-destination-container\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destination-box_top_title\",\n            children: [\"Destination \", this.props.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-box_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: this.selectClass,\n              onChange: this.onSelectPlanet,\n              value: this.props.value,\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Choose from the option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), this.props.planets.map((planet, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet.name,\n                  distance: planet.distance,\n                  index: index,\n                  children: planet.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), this.props.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_bottom\",\n          \"data-radio-wrapper\": true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicles\",\n            \"data-type\": \"vehicles-checkbox\",\n            \"data-radio-checkbox\": true,\n            id: 'vehicles_' + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              id: 'vehicles_group_' + this.props.id,\n              onChange: this.onSelectVehicles,\n              children: this.getFilteredVehicles(this.props.name).map((vehicle, index) => {\n                return /*#__PURE__*/_jsxDEV(VehicleRadio, {\n                  vehicle: vehicle,\n                  groupid: 'vehicles_group_' + this.props.id,\n                  name: this.props.name,\n                  index: index,\n                  id: index + 1\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this) : 'No vehicle data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js"],"names":["$","React","Fragment","VehicleRadio","PlanetDropdown","Component","constructor","props","disableSpaceOption","i","e","thisContainer","target","parents","thisRadioBox","find","radioswrapper","radios","noAvailClass","removeClass","planetData","allplanets","filter","obj","name","r","length","spaceDistance","data","parseInt","distance","addClass","onSelectPlanet","event","selectItem","value","revealSpaceOptions","dropdownId","onSelectVehicles","console","log","selectVehicle","revealnextBox","getFilteredVehicles","targetListdata","VbyD","forEach","obItem","desno","toLowerCase","selectedItems","selectedVehicle","selectedItemsList","Object","values","selectedKeyItemsList","keys","selectedKey","VbyDdata","shipData","updatedState","updatestate","updated","push","setState","total_no","reveal","containerClass","selectClass","id","selectedPlanet","render","planets","map","planet","index","vehicles","vehicle"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,eAAe,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,kBAbmB,GAaE,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC5B,UAAIC,aAAa,GAAGX,CAAC,CAACU,CAAC,CAACE,MAAH,CAAD,CAAYC,OAAZ,CAAoB,8BAApB,CAApB;AACA,UAAIC,YAAY,GAAGd,CAAC,CAACW,aAAD,CAAD,CAAiBI,IAAjB,CAAsB,uBAAtB,CAAnB;AACA,UAAIC,aAAa,GAAGhB,CAAC,CAACc,YAAD,CAAD,CAAgBC,IAAhB,CAAqB,UAArB,CAApB;AACA,UAAIE,MAAM,GAAGjB,CAAC,CAACgB,aAAD,CAAD,CAAiBD,IAAjB,CAAsB,iBAAtB,CAAb;AAEA,UAAIG,YAAY,GAAG,WAAnB;AACAlB,MAAAA,CAAC,CAACiB,MAAD,CAAD,CAAUE,WAAV,CAAsBD,YAAtB;AAGA,UAAIE,UAAU,GAAG,KAAKb,KAAL,CAAWc,UAAX,CAAsBC,MAAtB,CAA6BC,GAAG,IAAI;AACnD,eAAOA,GAAG,CAACC,IAAJ,KAAaf,CAApB;AACD,OAFgB,CAAjB,CAV4B,CAe5B;;AACA,WAAI,IAAIgB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGR,MAAM,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,YAAIE,aAAa,GAAG3B,CAAC,CAACiB,MAAM,CAACQ,CAAD,CAAP,CAAD,CAAaG,IAAb,CAAkB,UAAlB,CAApB;;AACA,YAAGC,QAAQ,CAACF,aAAD,CAAR,GAA0BE,QAAQ,CAACT,UAAU,CAAC,CAAD,CAAV,CAAcU,QAAf,CAArC,EAA8D;AAC5D9B,UAAAA,CAAC,CAACiB,MAAM,CAACQ,CAAD,CAAP,CAAD,CAAaM,QAAb,CAAsBb,YAAtB;AACD;AACF;AACF,KAnCkB;;AAAA,SAqCnBc,cArCmB,GAqCFC,KAAK,IAAI;AACxB,WAAK1B,KAAL,CAAW2B,UAAX,CAAsB,KAAK3B,KAAL,CAAWiB,IAAjC,EAAuCS,KAAK,CAACrB,MAAN,CAAauB,KAApD;AACA,WAAK5B,KAAL,CAAW6B,kBAAX,CAA8B,KAAK7B,KAAL,CAAW8B,UAAzC,EAAqDJ,KAAK,CAACrB,MAA3D;AACA,WAAKJ,kBAAL,CAAwByB,KAAK,CAACrB,MAAN,CAAauB,KAArC,EAA2CF,KAA3C;AACD,KAzCkB;;AAAA,SA2CnBK,gBA3CmB,GA2CAL,KAAK,IAAI;AAC1BM,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAKjC,KAAL,CAAWkC,aAAX,CAAyB,KAAKlC,KAAL,CAAWiB,IAApC,EAAyCS,KAAK,CAACrB,MAAN,CAAauB,KAAtD,EAA6DF,KAAK,CAACrB,MAAnE;AACA,WAAKL,KAAL,CAAWmC,aAAX,CAAyB,KAAKnC,KAAL,CAAW8B,UAApC,EAAgDJ,KAAK,CAACrB,MAAtD;AACD,KA/CkB;;AAAA,SAkDnB+B,mBAlDmB,GAkDInB,IAAD,IAAU;AAC7Be,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,UAAII,cAAJ,CAF8B,CAG9B;;AACA,WAAKrC,KAAL,CAAWsC,IAAX,CAAgBC,OAAhB,CAAyBC,MAAD,IAAY;AAClC,YAAGA,MAAM,CAACC,KAAP,CAAaC,WAAb,OAA+BzB,IAAI,CAACyB,WAAL,EAAlC,EAAqD;AACnD,cAAIC,aAAa,GAAG,EAAE,GAAG,KAAK3C,KAAL,CAAW4C;AAAhB,WAApB;AACA,cAAIC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcJ,aAAd,CAAxB;AACA,cAAIK,oBAAoB,GAAGF,MAAM,CAACG,IAAP,CAAYN,aAAZ,CAA3B;;AAEA,cAAGE,iBAAiB,CAAC1B,MAAlB,GAA0B,CAA7B,EAA+B;AAC7B,mBAAO6B,oBAAoB,CAACT,OAArB,CAA8BW,WAAD,IAAgB;AAClD,kBAAGV,MAAM,CAACC,KAAP,CAAaC,WAAb,OAA+BQ,WAAW,CAACR,WAAZ,EAAlC,EAA4D;AAC1D,uBAAOF,MAAM,CAACnB,IAAP,CAAY8B,QAAZ,CAAqBZ,OAArB,CAA+Ba,QAAD,IAAc;AACjD,sBAAGA,QAAQ,CAACnC,IAAT,CAAcyB,WAAd,OAAgCC,aAAa,CAACO,WAAD,CAAb,CAA2BR,WAA3B,EAAnC,EAA4E;AAC1E,wBAAG,KAAKW,YAAL,CAAkBlC,MAAlB,KAA6B,CAAhC,EAAkC;AAChC,0BAAImC,WAAW,GAAG,EAAlB;AACAA,sBAAAA,WAAW,CAACrC,IAAZ,GAAmBmC,QAAQ,CAACnC,IAAT,CAAcyB,WAAd,EAAnB;AACAY,sBAAAA,WAAW,CAACC,OAAZ,GAAsB,IAAtB;AACA,2BAAKF,YAAL,CAAkBG,IAAlB,CAAuBF,WAAvB;AACA,2BAAKG,QAAL,CAAcH,WAAd;AACAF,sBAAAA,QAAQ,CAACM,QAAT,GAAoBN,QAAQ,CAACM,QAAT,GAAkB,CAAtC;AACA;AACD;AACF;AACF,iBAZM,CAAP;AAaD;AACF,aAhBM,CAAP;AAiBD;AAGF;;AACD,eAAOrB,cAAc,GAAGS,MAAM,CAACN,MAAM,CAACnB,IAAP,CAAY8B,QAAb,CAA9B;AACD,OA7BD;AA+BA,aAAOd,cAAP;AACD,KAtFkB;;AAEjB,SAAKsB,MAAL,GAAe,KAAK3D,KAAL,CAAW2D,MAAZ,GAAuB,QAAvB,GAAoC,EAAlD;AACA,SAAKC,cAAL,GAAsB,oBAAkB,GAAlB,GAAsB,KAAKD,MAAjD,CAHiB,CAGwC;;AACzD,SAAKE,WAAL,GAAmB,0BAAwB,KAAK7D,KAAL,CAAW8D,EAAtD;AACA,SAAKT,YAAL,GAAoB,EAApB;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjC,KAAL,CAAW+D,cAAvB;AACD,GAVyD,CAa1D;;;AA4EAC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAE,KAAKJ,cAArB;AAAqC,QAAA,EAAE,EAAE,iBAAe,KAAK5D,KAAL,CAAW8D,EAAnE;AACE,0CADF;AAAA,gCAGE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,2BAAhB;AAAA,uCACgB,KAAK9D,KAAL,CAAW8D,EAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE;AAAQ,cAAA,EAAE,EAAE,KAAKD,WAAjB;AAA8B,cAAA,QAAQ,EAAE,KAAKpC,cAA7C;AAA6D,cAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW4B,KAA/E;AACE,cAAA,SAAS,EAAC,UADZ;AAAA,sCAGE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAKI,KAAK5B,KAAL,CAAWiE,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAAQC,KAAR,KAAkB;AACvC,oCAAO;AAAQ,kBAAA,KAAK,EAAED,MAAM,CAAClD,IAAtB;AAEK,kBAAA,QAAQ,EAAEkD,MAAM,CAAC5C,QAFtB;AAGK,kBAAA,KAAK,EAAE6C,KAHZ;AAAA,4BAKQD,MAAM,CAAClD;AALf,mBACUmD,KADV;AAAA;AAAA;AAAA;AAAA,wBAAP;AAOD,eARD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EA2BK,KAAKpE,KAAL,CAAWqE,QAAX,CAAoBlD,MAApB,GAA6B,CAA9B,gBACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAwC,oCAAxC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,yBAAU,mBAApC;AAAwD,uCAAxD;AAA4E,YAAA,EAAE,EAAE,cAAY,KAAKnB,KAAL,CAAW8D,EAAvG;AAAA,mCACE;AAAU,cAAA,EAAE,EAAE,oBAAkB,KAAK9D,KAAL,CAAW8D,EAA3C;AAA+C,cAAA,QAAQ,EAAE,KAAK/B,gBAA9D;AAAA,wBAEE,KAAKK,mBAAL,CAAyB,KAAKpC,KAAL,CAAWiB,IAApC,EAA0CiD,GAA1C,CAA8C,CAACI,OAAD,EAASF,KAAT,KAAiB;AAC7D,oCAAO,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAEE,OAAvB;AACL,kBAAA,OAAO,EAAE,oBAAkB,KAAKtE,KAAL,CAAW8D,EADjC;AAEL,kBAAA,IAAI,EAAE,KAAK9D,KAAL,CAAWiB,IAFZ;AAGL,kBAAA,KAAK,EAAEmD,KAHF;AAGS,kBAAA,EAAE,EAAEA,KAAK,GAAC;AAHnB,mBAG2BA,KAH3B;AAAA;AAAA;AAAA;AAAA,wBAAP;AAKD,eAND;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,GAiBE,iBA5CN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AA9IyD","sourcesContent":["import $ from 'jquery';\nimport React from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box'+' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    this.updatedState = [];\n    console.log(\"check this\")\n    console.log('this.props.selectedPlanet')\n    console.log(this.props.selectedPlanet)\n  }\n\n\n  // hide space that cant reac to the planet\n  disableSpaceOption = (i,e) => {\n    let thisContainer = $(e.target).parents('[data-destination-container]');\n    let thisRadioBox = $(thisContainer).find('[data-radio-checkbox]');\n    let radioswrapper = $(thisRadioBox).find('fieldset');\n    let radios = $(radioswrapper).find('[data-distance]');\n\n    let noAvailClass = 'not-avail';\n    $(radios).removeClass(noAvailClass);\n\n\n    let planetData = this.props.allplanets.filter(obj => {\n      return obj.name === i\n    })\n\n\n    // if space ship max distance < planetData.distance : hide the space ship\n    for(let r =0; r < radios.length; r++){\n      var spaceDistance = $(radios[r]).data('distance');\n      if(parseInt(spaceDistance) < parseInt(planetData[0].distance)){\n        $(radios[r]).addClass(noAvailClass);\n      }\n    }\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealSpaceOptions(this.props.dropdownId, event.target);\n    this.disableSpaceOption(event.target.value,event);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n     console.log('getFilteredVehicles');\n    let targetListdata;\n    // loop per destination box\n    this.props.VbyD.forEach((obItem) => {\n      if(obItem.desno.toLowerCase() === name.toLowerCase()){\n        let selectedItems = { ...this.props.selectedVehicle};\n        let selectedItemsList = Object.values(selectedItems);\n        let selectedKeyItemsList = Object.keys(selectedItems);\n\n        if(selectedItemsList.length >0){\n          return selectedKeyItemsList.forEach((selectedKey) =>{\n            if(obItem.desno.toLowerCase() === selectedKey.toLowerCase()){\n              return obItem.data.VbyDdata.forEach( (shipData) => {\n                if(shipData.name.toLowerCase() === selectedItems[selectedKey].toLowerCase()){\n                  if(this.updatedState.length === 0){\n                    let updatestate = {}\n                    updatestate.name = shipData.name.toLowerCase();\n                    updatestate.updated = true; \n                    this.updatedState.push(updatestate)\n                    this.setState(updatestate);\n                    shipData.total_no = shipData.total_no-1;\n                    return;\n                  }\n                }\n              })\n            }\n          })\n        }\n\n\n      } \n      return targetListdata = Object(obItem.data.VbyDdata);\n    });\n\n    return targetListdata\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}\n              className='dropdown'\n            >\n              <option value='0'>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\" data-radio-wrapper>\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.getFilteredVehicles(this.props.name).map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={vehicle} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index} \n                      ></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}