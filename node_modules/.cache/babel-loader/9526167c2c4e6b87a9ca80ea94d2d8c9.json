{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js\";\nimport $ from 'jquery';\nimport React, { Component } from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectPlanet = event => {\n      this.props.selectItem(this.props.name, event.target.value);\n      this.props.revealnextBox(this.props.dropdownId, event.target);\n    };\n\n    this.onSelectVehicles = event => {\n      console.log(\"onSelectVehicles\");\n      this.props.selectVehicle(this.props.name, event.target.value, event.target);\n      console.log(\"this.props.VbyD[0][this.props.name]\");\n      console.log(this.props.VbyD[0][this.props.name]);\n      console.log(this.props.VbyD[0][this.props.name].VbyDdata);\n      let updatedtargetList = this.props.VbyD.map(des => {\n        if (des) console.log(des);\n      }); // let updatedtargetList = this.props.VbyD[0][this.props.name].VbyDdata.map((item) => {\n      //   if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n      //     console.log(item.name);\n      //     let updatedNumber = item.total_no - 1;\n      //     return {...item,total_no: updatedNumber}\n      //   }\n      //   return item;\n      // })\n\n      console.log(\"updatedtargetList\");\n      console.log(updatedtargetList);\n      let getListforTargetDestination = this.props.VbyD.filter(obItem => obItem[this.props.name]);\n      let ListforTargetDestination = Object(getListforTargetDestination[0][this.props.name]).VbyDdata;\n      console.log('before set state');\n      console.log(\"this.props.VbyD\");\n      console.log(this.props.VbyD); // let updatedShipNo = ListforTargetDestination.map( item => {\n      //   if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n      //     let updatedNumber = item.total_no - 1;\n      //     return {...item,total_no: updatedNumber}\n      //   }\n      //   return item;\n      // })\n      // update while list\n\n      let updatedLists = this.props.VbyD.map((key, list) => {\n        console.log(\"list\");\n        console.log(list);\n        console.log(Object.getOwnPropertyNames(list));\n        console.log(list[1]); // if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n        // }\n      });\n      console.log(\"(this.props.VbyD)\");\n      console.log(this.props.VbyD);\n      this.props.setVbyD(oldState => ({})); // console.log(this.props.setVbyD()\n      // console.log('after')\n\n      console.log(\"this.props.VbyD\");\n      console.log(this.props.VbyD); // console.log(ListforTargetDestination)\n      // console.log(event.target)\n      // // to the closest fieldset parent\n      // let fieldsetWrapper = $(event.target).closest('fieldset');\n      // let fieldsetWrapperID = fieldsetWrapper[0].id;\n      // let thisFieldItems = fieldsetWrapper.children('input');\n      // console.log(\"fieldsetWrapperID\")\n      // console.log(fieldsetWrapperID)\n      // console.log(\"this.props.name :\"+this.props.name)\n      // console.log(this.props.name)\n      // fieldsetWrapper.attr('selected',true)\n      // thisFieldItems.removeAttr('test',false);\n      // thisFieldItems.each( (i,name) =>{\n      //   // checked on selected one\n      //   if(event.target.value.toLowerCase() === name.value.toLowerCase()){\n      //     console.log(\"this is :\" + name.value)\n      //     console.log(this.props.selectedVehicle)\n      //     // const selectedVehicle = { ...this.props.selectedVehicle};\n      //     let getListforTargetDestination = this.props.VbyD.filter(obItem => obItem[this.props.name]);\n      //     let ListforTargetDestination = Object(getListforTargetDestination[0][this.props.name]).VbyDdata;\n      //     console.log(\"ListforTargetDestination\")\n      //     console.log(ListforTargetDestination)\n      //     // this.props.VbyD.map((des,index)=>{\n      //     //   let destinationObv = Object(des);\n      //     //   if(destinationObv[this.props.name]){\n      //     //   }\n      //     //   // if(destinationObv.toLowerCase() === event.target.value.toLowerCase){\n      //     //   //   console.log(\"i selected this\")\n      //     //   // }\n      //     // console.log(\"destinationObv\")\n      //     // console.log(destinationObv)\n      //     // console.log(\"destinationObv[this.props.name]\")\n      //     // console.log(destinationObv[this.props.name])\n      //     // })\n      //     // for(var i = 0; i<this.props.selectedVehicleAvial.length; i++){\n      //     //   if(this.props.selectedVehicleAvial[i].name.toLowerCase() === name.value.toLowerCase()){\n      //     //     let availNo = this.props.selectedVehicleAvial[i].total_no;\n      //     //     if(availNo !== 0){\n      //     //       console.log('still has it')\n      //     //       console.log(this.props.selectedVehicle)\n      //     //     }\n      //     //     console.log(this.props.selectedVehicleAvial[i]);\n      //     //     console.log(\"availNo :\"+availNo);\n      //     //     // selectedVehicleAvial();\n      //     //   }\n      //     // }\n      //   }\n      // })\n      // // decease total_no -1 per select selectedVehicleAvial\n      // console.log(\"thisFieldItems\")\n      // console.log(thisFieldItems)\n      // // console.log('value selected :'+value)\n      // // const removedItems = { ...selectedPlanet};\n      // // delete removedItems[name];\n      // // const removedItemsList = Object.values(removedItems);\n      // // return planets.filter(item => {\n      // //   return !removedItemsList.includes(item.name);\n      // // });\n    };\n\n    this.getFilteredVehicles = name => {\n      console.log(\"getFilteredVehicles\");\n      console.log(this.props.VbyD); // let targetList = this.props.VbyD.filter(obItem => obItem[name]);\n      // console.log(\"getFilteredVehicles\")\n      // console.log(this.props.VbyD)\n      // let targetListdata = Object(targetList[0][name]).VbyDdata;\n\n      let targetListdata;\n      let targetList = this.props.VbyD.filter(obItem => {\n        if (obItem.desno.toLowerCase() === name.toLowerCase()) {\n          console.log(\"check this\");\n          console.log(obItem.data.VbyDdata);\n          console.log(this.props.VbyD);\n          targetListdata = Object(obItem.data.VbyDdata);\n        }\n      });\n      /*\n      const removedItems = { ...selectedPlanet};\n      delete removedItems[name];\n      const removedItemsList = Object.values(removedItems);\n      return planets.filter(item => {\n        return !removedItemsList.includes(item.name);\n      });\n      */\n      // const selectedVehicle = { ...this.props.selectedVehicle};\n      // console.log(\"selectedVehicle\");\n      // console.log(selectedVehicle);\n      // // delete selectedVehicle[name];\n      // const updatedAvailList = Object.values(selectedVehicle);\n      // console.log(\"updatedAvailList\")\n      // console.log(updatedAvailList)\n      // return this.props.vehicles.filter(item => {\n      //   return !updatedAvailList.includes(item.name);\n      // });\n\n      return targetListdata;\n    };\n\n    this.reveal = this.props.reveal ? 'reveal' : '';\n    this.containerClass = 'destination-box' + ' ' + this.reveal; // spacing for classname\n\n    this.selectClass = 'destination_dropdown_' + this.props.id;\n    console.log(\"this.props.vehicles\");\n    console.log(this.props.vehicles);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.containerClass,\n        id: 'destination_' + this.props.id,\n        \"data-destination-container\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destination-box_top_title\",\n            children: [\"Destination \", this.props.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-box_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: this.selectClass,\n              onChange: this.onSelectPlanet,\n              value: this.props.value,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose from the option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this), this.props.planets.map((planet, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet.name,\n                  distance: planet.distance,\n                  index: index,\n                  children: planet.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), this.props.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicles\",\n            \"data-type\": \"vehicles-checkbox\",\n            \"data-radio-checkbox\": true,\n            id: 'vehicles_' + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              id: 'vehicles_group_' + this.props.id,\n              onChange: this.onSelectVehicles,\n              children: this.getFilteredVehicles(this.props.name).map((vehicle, index) => {\n                return /*#__PURE__*/_jsxDEV(VehicleRadio, {\n                  vehicle: vehicle,\n                  groupid: 'vehicles_group_' + this.props.id,\n                  name: this.props.name,\n                  index: index,\n                  id: index + 1\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : 'No vehicle data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js"],"names":["$","React","Component","Fragment","VehicleRadio","PlanetDropdown","constructor","props","onSelectPlanet","event","selectItem","name","target","value","revealnextBox","dropdownId","onSelectVehicles","console","log","selectVehicle","VbyD","VbyDdata","updatedtargetList","map","des","getListforTargetDestination","filter","obItem","ListforTargetDestination","Object","updatedLists","key","list","getOwnPropertyNames","setVbyD","oldState","getFilteredVehicles","targetListdata","targetList","desno","toLowerCase","data","reveal","containerClass","selectClass","id","vehicles","render","planets","planet","index","distance","length","vehicle"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport React, { Component } from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box'+' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    console.log(\"this.props.vehicles\")\n    console.log(this.props.vehicles)\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n\n\n    console.log(\"this.props.VbyD[0][this.props.name]\")\n    console.log(this.props.VbyD[0][this.props.name])\n    console.log(this.props.VbyD[0][this.props.name].VbyDdata)\n    let updatedtargetList = this.props.VbyD.map( (des) => {\n      if(des)\n      console.log(des);\n    });\n    // let updatedtargetList = this.props.VbyD[0][this.props.name].VbyDdata.map((item) => {\n    //   if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n    //     console.log(item.name);\n    //     let updatedNumber = item.total_no - 1;\n    //     return {...item,total_no: updatedNumber}\n    //   }\n    //   return item;\n    // })\n\n    console.log(\"updatedtargetList\")\n    console.log(updatedtargetList)\n\n\n    let getListforTargetDestination = this.props.VbyD.filter(obItem => obItem[this.props.name]);\n    let ListforTargetDestination = Object(getListforTargetDestination[0][this.props.name]).VbyDdata;\n    console.log('before set state')\n    console.log(\"this.props.VbyD\")\n    console.log(this.props.VbyD)\n    // let updatedShipNo = ListforTargetDestination.map( item => {\n    //   if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n    //     let updatedNumber = item.total_no - 1;\n    //     return {...item,total_no: updatedNumber}\n    //   }\n    //   return item;\n    // })\n\n    // update while list\n    let updatedLists = this.props.VbyD.map((key,list) => {\n      console.log(\"list\")\n      console.log(list)\n      console.log(Object.getOwnPropertyNames(list))\n      console.log(list[1])\n      // if(item.name.toLowerCase() === event.target.value.toLowerCase()){\n\n      // }\n    })\n\n    console.log(\"(this.props.VbyD)\")\n    console.log(this.props.VbyD)\n\n    this.props.setVbyD(oldState =>({\n\n    }));\n    // console.log(this.props.setVbyD()\n    // console.log('after')\n    console.log(\"this.props.VbyD\")\n    console.log(this.props.VbyD)\n    // console.log(ListforTargetDestination)\n\n\n\n    // console.log(event.target)\n    // // to the closest fieldset parent\n    // let fieldsetWrapper = $(event.target).closest('fieldset');\n    // let fieldsetWrapperID = fieldsetWrapper[0].id;\n    // let thisFieldItems = fieldsetWrapper.children('input');\n    \n    // console.log(\"fieldsetWrapperID\")\n    // console.log(fieldsetWrapperID)\n    // console.log(\"this.props.name :\"+this.props.name)\n    // console.log(this.props.name)\n\n    // fieldsetWrapper.attr('selected',true)\n    // thisFieldItems.removeAttr('test',false);\n    // thisFieldItems.each( (i,name) =>{\n    //   // checked on selected one\n    //   if(event.target.value.toLowerCase() === name.value.toLowerCase()){\n    //     console.log(\"this is :\" + name.value)\n    //     console.log(this.props.selectedVehicle)\n\n    //     // const selectedVehicle = { ...this.props.selectedVehicle};\n    //     let getListforTargetDestination = this.props.VbyD.filter(obItem => obItem[this.props.name]);\n    //     let ListforTargetDestination = Object(getListforTargetDestination[0][this.props.name]).VbyDdata;\n    //     console.log(\"ListforTargetDestination\")\n    //     console.log(ListforTargetDestination)\n    //     // this.props.VbyD.map((des,index)=>{\n    //     //   let destinationObv = Object(des);\n\n    //     //   if(destinationObv[this.props.name]){\n\n    //     //   }\n          \n    //     //   // if(destinationObv.toLowerCase() === event.target.value.toLowerCase){\n    //     //   //   console.log(\"i selected this\")\n    //     //   // }\n          \n    //     // console.log(\"destinationObv\")\n    //     // console.log(destinationObv)\n    //     // console.log(\"destinationObv[this.props.name]\")\n    //     // console.log(destinationObv[this.props.name])\n    //     // })\n\n        \n\n    //     // for(var i = 0; i<this.props.selectedVehicleAvial.length; i++){\n    //     //   if(this.props.selectedVehicleAvial[i].name.toLowerCase() === name.value.toLowerCase()){\n    //     //     let availNo = this.props.selectedVehicleAvial[i].total_no;\n    //     //     if(availNo !== 0){\n    //     //       console.log('still has it')\n    //     //       console.log(this.props.selectedVehicle)\n    //     //     }\n    //     //     console.log(this.props.selectedVehicleAvial[i]);\n    //     //     console.log(\"availNo :\"+availNo);\n    //     //     // selectedVehicleAvial();\n    //     //   }\n    //     // }\n    //   }\n    // })\n    // // decease total_no -1 per select selectedVehicleAvial\n    // console.log(\"thisFieldItems\")\n    // console.log(thisFieldItems)\n\n    \n    // // console.log('value selected :'+value)\n\n    // // const removedItems = { ...selectedPlanet};\n    // // delete removedItems[name];\n    // // const removedItemsList = Object.values(removedItems);\n    // // return planets.filter(item => {\n    // //   return !removedItemsList.includes(item.name);\n    // // });\n\n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n\n    console.log(\"getFilteredVehicles\")\n    console.log(this.props.VbyD)\n\n    // let targetList = this.props.VbyD.filter(obItem => obItem[name]);\n    // console.log(\"getFilteredVehicles\")\n    // console.log(this.props.VbyD)\n    // let targetListdata = Object(targetList[0][name]).VbyDdata;\n\n    let targetListdata;\n    let targetList = this.props.VbyD.filter((obItem) => {\n      if(obItem.desno.toLowerCase() === name.toLowerCase()){\n        console.log(\"check this\")\n        console.log(obItem.data.VbyDdata)\n        console.log(this.props.VbyD)\n        targetListdata = Object(obItem.data.VbyDdata);\n      }\n    });\n\n\n    /*\n    const removedItems = { ...selectedPlanet};\n    delete removedItems[name];\n    const removedItemsList = Object.values(removedItems);\n    return planets.filter(item => {\n      return !removedItemsList.includes(item.name);\n    });\n    */\n    // const selectedVehicle = { ...this.props.selectedVehicle};\n    // console.log(\"selectedVehicle\");\n    // console.log(selectedVehicle);\n    // // delete selectedVehicle[name];\n    // const updatedAvailList = Object.values(selectedVehicle);\n    // console.log(\"updatedAvailList\")\n    // console.log(updatedAvailList)\n    // return this.props.vehicles.filter(item => {\n\n    //   return !updatedAvailList.includes(item.name);\n    // });\n    return targetListdata\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}>\n              <option>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\">\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.getFilteredVehicles(this.props.name).map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={vehicle} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index}></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}