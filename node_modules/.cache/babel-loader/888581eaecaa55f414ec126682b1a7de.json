{"ast":null,"code":"var _jsxFileName = \"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js\";\nimport $ from 'jquery';\nimport React from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.afterSelectThisPlanet = (destination, event) => {\n      console.log('afterSelectThisPlanet'); // show available spacship\n      // let thisSelectedList = this.props.selectedVehicle;\n      // let availVehicles = this.props.vehicles;\n      // console.log('thisSelectedList')\n      // console.log(thisSelectedList)\n      // console.log(Object.keys(thisSelectedList).length)\n      // console.log('---------1')\n      // //  next destination to show the updated list\n      // console.log(Object.keys(thisSelectedList));\n      // let SelectedDesName = Object.keys(thisSelectedList);\n      // console.log(this.props.vehicles)\n      // console.log('thisSelectedList')\n      // console.log(thisSelectedList)\n      // let updatedtargetDate = this.props.VbyD.map((obItem,obIndex) => {\n      //   if(obItem.desno.toLowerCase() === this.props.name.toLowerCase()){\n      //     let spaceitem = obItem.data.VbyDdata;\n      //     spaceitem.map((element,index) => {\n      //       if(element.name.toLowerCase() === event.target.value.toLowerCase()){\n      //         element.total_no = element.total_no - 1;\n      //         // check if click in the same destination_no, do not update value , \n      //         // update value when select next dropdown\n      //       } else{\n      //         console.log(\"element\")\n      //         console.log(element)\n      //       }\n      //     });\n      //     // adding ship update to the main list\n      //     obItem.data.VbyDdata = spaceitem;\n      //     console.log('obItem.data.VbyDdata')\n      //     console.log(obItem.data.VbyDdata)\n      //   } else{\n      //     console.log('======= fuckkkk')\n      //     obItem.data.VbyDdata = availVehicles;\n      //   }\n      //   console.log(obItem);\n      //   return obItem\n      // });\n      // console.log('updatedtargetDate')\n      // console.log(updatedtargetDate)\n      // // set the state \n      // this.props.setVbyD(updatedtargetDate);\n    };\n\n    this.onSelectPlanet = event => {\n      this.props.selectItem(this.props.name, event.target.value);\n      this.props.revealnextBox(this.props.dropdownId, event.target);\n      this.afterSelectThisPlanet(this.props.name, event);\n    };\n\n    this.onSelectVehicles = event => {\n      console.log(\"onSelectVehicles\");\n      this.props.selectVehicle(this.props.name, event.target.value, event.target);\n    };\n\n    this.getFilteredVehicles = name => {\n      console.log('getFilteredVehicles');\n      let targetListdata;\n      console.log(this.props.VbyD); // loop per destination box\n\n      this.props.VbyD.forEach(obItem => {\n        console.log(obItem.desno.toLowerCase());\n        console.log(name.toLowerCase());\n\n        if (obItem.desno.toLowerCase() === name.toLowerCase()) {\n          console.log('obItem');\n          console.log(obItem);\n          let selectedItems = { ...this.props.selectedVehicle\n          };\n          let selectedItemsList = Object.values(selectedItems);\n          let selectedKeyItemsList = Object.keys(selectedItems);\n\n          if (selectedItemsList.length > 0) {\n            return selectedKeyItemsList.forEach(selectedKey => {\n              if (obItem.desno.toLowerCase() === selectedKey.toLowerCase()) {\n                return obItem.data.VbyDdata.forEach(shipData => {\n                  if (shipData.name.toLowerCase() === selectedItems[selectedKey].toLowerCase()) {\n                    if (this.updatedState.length === 0) {\n                      let updatestate = {};\n                      updatestate.name = shipData.name.toLowerCase();\n                      updatestate.updated = true;\n                      console.log(\"this.updatedState\");\n                      console.log(this.updatedState);\n                      console.log(\"updatestate\");\n                      console.log(updatestate);\n                      this.updatedState.push(updatestate);\n                      this.setState(updatestate);\n                      shipData.total_no = shipData.total_no - 1;\n                      return;\n                    }\n                  }\n                });\n              }\n            });\n          }\n        }\n\n        return targetListdata = Object(obItem.data.VbyDdata);\n      });\n      console.log('targetListdata');\n      console.log(targetListdata);\n      console.log('this.updatedState');\n      console.log(this.updatedState);\n      /*\n      (4) [{…}, {…}, {…}, {…}]\n      0: {name: 'Space pod', total_no: 2, max_distance: 200, speed: 2}\n      1: {name: 'Space rocket', total_no: 1, max_distance: 300, speed: 4}\n      2: {name: 'Space shuttle', total_no: 1, max_distance: 400, speed: 5}\n      3: {name: 'Space ship', total_no: 2, max_distance: 600, speed: 10}\n      */\n\n      return targetListdata;\n    };\n\n    this.reveal = this.props.reveal ? 'reveal' : '';\n    this.containerClass = 'destination-box' + ' ' + this.reveal; // spacing for classname\n\n    this.selectClass = 'destination_dropdown_' + this.props.id;\n    this.updatedState = [];\n    console.log(\"check this\");\n    console.log('this.props.VbyD');\n    console.log(this.props.VbyD);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.containerClass,\n        id: 'destination_' + this.props.id,\n        \"data-destination-container\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destination-box_top_title\",\n            children: [\"Destination \", this.props.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-box_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: this.selectClass,\n              onChange: this.onSelectPlanet,\n              value: this.props.value,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose from the option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this), this.props.planets.map((planet, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet.name,\n                  distance: planet.distance,\n                  index: index,\n                  children: planet.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), this.props.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-box_bottom\",\n          \"data-radio-wrapper\": true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicles\",\n            \"data-type\": \"vehicles-checkbox\",\n            \"data-radio-checkbox\": true,\n            id: 'vehicles_' + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              id: 'vehicles_group_' + this.props.id,\n              onChange: this.onSelectVehicles,\n              children: this.getFilteredVehicles(this.props.name).map((vehicle, index) => {\n                return /*#__PURE__*/_jsxDEV(VehicleRadio, {\n                  vehicle: vehicle,\n                  groupid: 'vehicles_group_' + this.props.id,\n                  name: this.props.name,\n                  index: index,\n                  id: index + 1\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this) : 'No vehicle data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js"],"names":["$","React","Fragment","VehicleRadio","PlanetDropdown","Component","constructor","props","afterSelectThisPlanet","destination","event","console","log","onSelectPlanet","selectItem","name","target","value","revealnextBox","dropdownId","onSelectVehicles","selectVehicle","getFilteredVehicles","targetListdata","VbyD","forEach","obItem","desno","toLowerCase","selectedItems","selectedVehicle","selectedItemsList","Object","values","selectedKeyItemsList","keys","length","selectedKey","data","VbyDdata","shipData","updatedState","updatestate","updated","push","setState","total_no","reveal","containerClass","selectClass","id","render","planets","map","planet","index","distance","vehicles","vehicle"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport React from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box'+' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    this.updatedState = [];\n    console.log(\"check this\")\n    console.log('this.props.VbyD')\n    console.log(this.props.VbyD)\n  }\n\n  afterSelectThisPlanet = (destination,event) => {\n    console.log('afterSelectThisPlanet')\n\n    // show available spacship\n    // let thisSelectedList = this.props.selectedVehicle;\n    // let availVehicles = this.props.vehicles;\n\n    // console.log('thisSelectedList')\n    // console.log(thisSelectedList)\n    // console.log(Object.keys(thisSelectedList).length)\n\n\n    // console.log('---------1')\n    // //  next destination to show the updated list\n    // console.log(Object.keys(thisSelectedList));\n    // let SelectedDesName = Object.keys(thisSelectedList);\n\n\n    // console.log(this.props.vehicles)\n    // console.log('thisSelectedList')\n    // console.log(thisSelectedList)\n\n\n    // let updatedtargetDate = this.props.VbyD.map((obItem,obIndex) => {\n    //   if(obItem.desno.toLowerCase() === this.props.name.toLowerCase()){\n    //     let spaceitem = obItem.data.VbyDdata;\n    //     spaceitem.map((element,index) => {\n\n    //       if(element.name.toLowerCase() === event.target.value.toLowerCase()){\n    //         element.total_no = element.total_no - 1;\n    //         // check if click in the same destination_no, do not update value , \n    //         // update value when select next dropdown\n    //       } else{\n    //         console.log(\"element\")\n    //         console.log(element)\n    //       }\n\n    //     });\n\n    //     // adding ship update to the main list\n    //     obItem.data.VbyDdata = spaceitem;\n    //     console.log('obItem.data.VbyDdata')\n    //     console.log(obItem.data.VbyDdata)\n    //   } else{\n    //     console.log('======= fuckkkk')\n    //     obItem.data.VbyDdata = availVehicles;\n    //   }\n\n    //   console.log(obItem);\n    //   return obItem\n    // });\n\n    // console.log('updatedtargetDate')\n    // console.log(updatedtargetDate)\n\n\n    // // set the state \n    // this.props.setVbyD(updatedtargetDate);\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n\n    this.afterSelectThisPlanet(this.props.name,event);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n\n\n    \n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n    console.log('getFilteredVehicles');\n    let targetListdata;\n    console.log(this.props.VbyD)\n    // loop per destination box\n    this.props.VbyD.forEach((obItem) => {\n      console.log(obItem.desno.toLowerCase());\n      console.log(name.toLowerCase());\n      if(obItem.desno.toLowerCase() === name.toLowerCase()){\n        console.log('obItem');\n        console.log(obItem);\n        let selectedItems = { ...this.props.selectedVehicle};\n        let selectedItemsList = Object.values(selectedItems);\n        let selectedKeyItemsList = Object.keys(selectedItems);\n\n        if(selectedItemsList.length >0){\n          return selectedKeyItemsList.forEach((selectedKey) =>{\n            if(obItem.desno.toLowerCase() === selectedKey.toLowerCase()){\n              return obItem.data.VbyDdata.forEach( (shipData) => {\n                if(shipData.name.toLowerCase() === selectedItems[selectedKey].toLowerCase()){\n                  if(this.updatedState.length === 0){\n                    let updatestate = {}\n                    updatestate.name = shipData.name.toLowerCase();\n                    updatestate.updated = true; \n                    console.log(\"this.updatedState\")\n                    console.log(this.updatedState)\n                    console.log(\"updatestate\")\n                    console.log(updatestate)\n                    this.updatedState.push(updatestate)\n                    this.setState(updatestate);\n                    shipData.total_no = shipData.total_no-1;\n                    return;\n                  }\n                }\n              })\n            }\n          })\n        }\n\n\n      } \n      return targetListdata = Object(obItem.data.VbyDdata);\n    });\n\n\n    console.log('targetListdata');\n    console.log(targetListdata);\n    console.log('this.updatedState')\n    console.log(this.updatedState)\n    /*\n    (4) [{…}, {…}, {…}, {…}]\n0: {name: 'Space pod', total_no: 2, max_distance: 200, speed: 2}\n1: {name: 'Space rocket', total_no: 1, max_distance: 300, speed: 4}\n2: {name: 'Space shuttle', total_no: 1, max_distance: 400, speed: 5}\n3: {name: 'Space ship', total_no: 2, max_distance: 600, speed: 10}\n    */\n    return targetListdata\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}>\n              <option>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\" data-radio-wrapper>\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.getFilteredVehicles(this.props.name).map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={vehicle} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index} \n                      ></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}