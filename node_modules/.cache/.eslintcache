[{"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/index.js":"1","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/App.js":"2","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/reportWebVitals.js":"3","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js":"4","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/VehicleRadio.js":"5","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/Calculate.js":"6","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/index.js":"7","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/App.js":"8","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/reportWebVitals.js":"9","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/PlanetDropdown.js":"10","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/Calculate.js":"11","/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/VehicleRadio.js":"12"},{"size":500,"mtime":1642939290233,"results":"13","hashOfConfig":"14"},{"size":10787,"mtime":1648613344823,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1642508954744,"results":"16","hashOfConfig":"14"},{"size":5312,"mtime":1648613388001,"results":"17","hashOfConfig":"14"},{"size":632,"mtime":1647436208741,"results":"18","hashOfConfig":"14"},{"size":1841,"mtime":1648612270156,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":1642939290233,"results":"20","hashOfConfig":"21"},{"size":10787,"mtime":1648613344823,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1642508954744,"results":"23","hashOfConfig":"21"},{"size":5312,"mtime":1648613388001,"results":"24","hashOfConfig":"21"},{"size":1841,"mtime":1648612270156,"results":"25","hashOfConfig":"21"},{"size":632,"mtime":1647436208741,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"12vtq1a",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d2ulmr",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/index.js",[],["54","55"],"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/App.js",["56"],"import $ from 'jquery';\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport PlanetDropdown from './components/PlanetDropdown'\nimport Calulate from './components/Calculate'\n\nfunction App() {\n  const [planets, setPlanet] = useState([]);\n  const [vehicles, setVehicle] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState([]);\n  const [selectedVehicle, setSelectedVehicle] = useState([]);\n  const [vehicleByDestination, setVehicleByDestination] = useState([]);\n  const [submitStatus, setSubmitStatus] = useState('start');\n  const [finalTime, setFinaltime] = useState(0);\n  const [planetFound, setPlanetFound] = useState(0);\n  const planetURL = 'https://5f5ff7f790cf8d00165573ed.mockapi.io/planets';\n  const vehicleURL = 'https://5f5ff7f790cf8d00165573ed.mockapi.io/vehicles';\n  const successMSG = 'Success! Congrats on Finding Falcone. King Shan is mighty pleased.';\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const dataPlanet = await fetchData(planetURL);\n      console.log(dataPlanet)\n      setPlanet(dataPlanet);\n    }\n\n    const getVehicles = async () => {\n      const dataVehicle = await fetchData(vehicleURL);\n      const vList = filterVihicle(dataVehicle);\n      setVehicle(vList);\n    }\n\n    const createVehicleByDestinationList = async () =>{\n      const data = await fetchData(vehicleURL);\n      const VbyDdata = filterVihicle(data);\n      const VbyD = [\n        {desno: 'destination_1', data:{VbyDdata}},\n        {desno: 'destination_2', data:{VbyDdata}},\n        {desno: 'destination_3', data:{VbyDdata}},\n        {desno: 'destination_4', data:{VbyDdata}},\n      ]\n      setVehicleByDestination(VbyD);\n    }\n\n\n    getPlanets();\n    getVehicles();\n    createVehicleByDestinationList();\n    console.log('start')\n  }, []);\n\n\n  // Fetch data from url\n  const fetchData = async (url) => {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data\n  }\n\n  // filter option from dropdown\n  const getFilteredPlanets = (name) => {\n    const removedItems = { ...selectedPlanet};\n    delete removedItems[name];\n    const removedItemsList = Object.values(removedItems);\n    return planets.filter(item => {\n      return !removedItemsList.includes(item.name);\n    });\n  }\n\n  const filterVihicle = (list) =>{\n    let finalList = [];\n    list.forEach((v) => {\n      let name = v.name;\n      if(name.indexOf('NaN') <=0){\n        finalList.push(v)\n      }\n    })\n    return finalList;\n  }\n\n  const getPlanet = (name) => {\n    return selectedPlanet[name];\n  }\n\n  const onSubmit = async (e) => {\n    let planet_names = Object.values(selectedPlanet);\n    let vehicle_names = Object.values(selectedVehicle);\n    e.preventDefault()\n    const res = await fetch(`https://5f5ff7f790cf8d00165573ed.mockapi.io/find`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        planet_names:planet_names,\n        vehicle_names:vehicle_names\n      }),\n    })\n\n    const data = await res.json()\n\n    // if success\n    if(data.status === 'success'){\n      setSubmitStatus(data.status);\n      setPlanetFound(data.planet_name);\n    }\n\n\n    \n    console.log(\"onSubmit\")\n    console.log(planet_names)\n    console.log(vehicle_names)\n    console.log(data)\n    console.log(\"submitStatus\")\n    console.log(submitStatus)\n  }\n\n  const revealSpaceOptions = (containerID,e) => {\n    let dataEle = '[data-destination-container]';\n    let dataradioWrapper = '[data-radio-wrapper]';\n    let thisContainer =  $(e).closest(dataEle);\n    let thisradio = thisContainer.children(dataradioWrapper);\n\n    thisradio.addClass('reveal');\n  }\n\n  // on select show the next box\n  const revealnextBox = (containerID,e) => {\n    let dataEle = '[data-destination-container]';\n    let thisContainer =  $(e).closest(dataEle);\n    let nextContainer = thisContainer.next(dataEle);\n\n    // adding reveal class to the box next to selected box\n    nextContainer.addClass('reveal');\n  }\n\n\n  const selectItem = (containerID, value) => {\n    console.log(\"selectItem : \" + containerID + \" and \" + value)\n    setSelectedPlanet({\n      ...selectedPlanet,\n      [containerID]: value\n    });\n\n  };\n\n\n  const selectVehicle = (containerID, value, e) => {\n    console.log('selectVehicle : '+containerID+ ' : '+value);\n    setSelectedVehicle({\n      ...selectedVehicle,\n      [containerID]: value\n    })\n  };\n\n  const onReset = () =>{\n    window.location.reload(false);\n    // setPlanet([])\n    // setVehicle([])\n    // setSelectedPlanet([])\n    // setSelectedVehicle([])\n    // setVehicleByDestination([])\n    \n    /*\n    setSelectedPlanet('');\n    setSelectedVehicle('');\n\n    // hide all the boxes \n    let dataradioWrapper = $('[data-radio-wrapper]');\n    let destinationWrapper = $('[data-destination-container]');\n    dataradioWrapper.removeClass('reveal');\n    destinationWrapper.not('[data-destination-container]:first-child').removeClass('reveal');\n\n\n\n    // clear dropdowns\n    let dropdowns = destinationWrapper.find('.dropdown');\n    console.log(\"dropdowns\")\n    console.log(dropdowns)\n    $('[data-destination-container] .dropdown').selectedIndex = 0;\n    */\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Finding Falcone</h1>\n\n        <div className=\"top-nav\">\n          <button onClick={onReset}>reset</button>\n        </div>\n      </header>\n        {\n          (submitStatus !== 'success') ? (\n            (planets.length > 0 && vehicles.length > 0 && vehicleByDestination.length >0) ? (\n              <div className=\"missioncontroll\">\n                <p>Select planets you want to search in:</p>\n                <div className=\"missioncontroll_container\">\n    \n                        \n                          <React.Fragment>\n                          <PlanetDropdown\n                            name='destination_1'\n                            vehicles={vehicles}\n                            selectedVehicle={selectedVehicle}\n                            selectVehicle={ selectVehicle}\n                            VbyD={vehicleByDestination}\n                            setVbyD={setVehicleByDestination}\n                            planets={getFilteredPlanets('destination_1')}\n                            value={getPlanet('destination_1')}\n                            dropdownId='destination_1'\n                            revealnextBox={revealnextBox}\n                            revealSpaceOptions={revealSpaceOptions}\n                            allplanets={planets}\n                            selectItem={selectItem} id='1'\n                            reveal={true} // show first box on load\n                            />\n                          <PlanetDropdown\n                            name='destination_2'\n                            vehicles={vehicles}\n                            selectedVehicle={selectedVehicle}\n                            selectVehicle={ selectVehicle}\n                            VbyD={vehicleByDestination}\n                            setVbyD={setVehicleByDestination}\n                            planets={getFilteredPlanets('destination_2')}\n                            value={getPlanet('destination_2')}\n                            dropdownId='destination_2'\n                            revealnextBox={revealnextBox}\n                            revealSpaceOptions={revealSpaceOptions}\n                            allplanets={planets}\n                            selectItem={selectItem} id='2'/>\n                          <PlanetDropdown\n                            name='destination_3'\n                            vehicles={vehicles}\n                            vehiclesAvail={vehicles}\n                            selectedVehicle={selectedVehicle}\n                            selectVehicle={ selectVehicle}\n                            VbyD={vehicleByDestination}\n                            setVbyD={setVehicleByDestination}\n                            planets={getFilteredPlanets('destination_3')}\n                            value={getPlanet('destination_3')}\n                            dropdownId='destination_3'\n                            revealnextBox={revealnextBox}\n                            revealSpaceOptions={revealSpaceOptions}\n                            allplanets={planets}\n                            selectItem={selectItem} id='3'/>\n                          <PlanetDropdown\n                            name='destination_4'\n                            vehicles={vehicles}\n                            selectedVehicle={selectedVehicle}\n                            selectVehicle={ selectVehicle}\n                            VbyD={vehicleByDestination}\n                            setVbyD={setVehicleByDestination}\n                            planets={getFilteredPlanets('destination_4')}\n                            value={getPlanet('destination_4')}\n                            dropdownId='destination_4'\n                            revealnextBox={revealnextBox}\n                            revealSpaceOptions={revealSpaceOptions}\n                            allplanets={planets}\n                            selectItem={selectItem} id='4'/>\n                          </React.Fragment>\n            \n                      \n                  \n                </div>\n                        \n                <Calulate selectedVehicle={selectedVehicle} \n                  selectedPlanet={selectedPlanet}\n                  vehicles={vehicles} planets={planets}\n                  setFinaltime={setFinaltime}\n                ></Calulate>\n    \n                <div className=\"missioncontroll_form\">\n                  <form className='fiding-form' onSubmit={onSubmit}>\n                    <div className='form-control hidden'>\n                      <label htmlFor=\"destination\">placeholder</label>\n                      <input type=\"text\" data-finding-form-value/>\n                    </div>\n                    <button type=\"submit\" value=\"Find Falcone!\" className='btn btn-big'>\n                      <span>Find Falcone!</span>\n                    </button>\n                  </form>\n                </div>\n              </div>\n    \n              ) : (\n                'no data to show'\n              )\n          ) : (\n            // on success\n            <div className='successbox'>\n              <div className='successbox-top'>\n                <h3>{successMSG}</h3>\n              </div>\n              <div className='successbox-bottom'>\n                <span>Time taken : {finalTime}</span>\n                <span>Planet found : {planetFound}</span>\n                <button onClick={onReset} className=\"btn-big\">Start Again</button>\n              </div>\n            </div>\n          )\n        }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/reportWebVitals.js",[],"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/PlanetDropdown.js",["57"],"import $ from 'jquery';\nimport React from 'react'\nimport { Fragment } from 'react/cjs/react.production.min';\nimport VehicleRadio from '../components/VehicleRadio'\n\nexport default class PlanetDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reveal = (this.props.reveal) ? ('reveal') : ('');\n    this.containerClass = 'destination-box' + ' '+this.reveal; // spacing for classname\n    this.selectClass = 'destination_dropdown_'+this.props.id;\n    this.updatedState = [];\n    console.log(\"check this\")\n    console.log('this.props.selectedPlanet')\n    console.log(this.props.selectedPlanet)\n  }\n\n\n  // hide space that cant reac to the planet\n  disableSpaceOption = (i,e) => {\n    let thisContainer = $(e.target).parents('[data-destination-container]');\n    let thisRadioBox = $(thisContainer).find('[data-radio-checkbox]');\n    let radioswrapper = $(thisRadioBox).find('fieldset');\n    let radios = $(radioswrapper).find('[data-distance]');\n\n    let noAvailClass = 'not-avail';\n    $(radios).removeClass(noAvailClass);\n\n\n    let planetData = this.props.allplanets.filter(obj => {\n      return obj.name === i\n    })\n\n\n    // if space ship max distance < planetData.distance : hide the space ship\n    for(let r =0; r < radios.length; r++){\n      var spaceDistance = $(radios[r]).data('distance');\n      if(parseInt(spaceDistance) < parseInt(planetData[0].distance)){\n        $(radios[r]).addClass(noAvailClass);\n      }\n    }\n  }\n\n  onSelectPlanet = event => {\n    this.props.selectItem(this.props.name, event.target.value);\n    this.props.revealSpaceOptions(this.props.dropdownId, event.target);\n    this.disableSpaceOption(event.target.value,event);\n  };\n\n  onSelectVehicles = event => {\n    console.log(\"onSelectVehicles\")\n    this.props.selectVehicle(this.props.name,event.target.value, event.target);\n    this.props.revealnextBox(this.props.dropdownId, event.target);\n  }\n\n  // filter radio option\n  getFilteredVehicles = (name) => {\n     console.log('getFilteredVehicles');\n    let targetListdata;\n    // loop per destination box\n    this.props.VbyD.forEach((obItem) => {\n      if(obItem.desno.toLowerCase() === name.toLowerCase()){\n        let selectedItems = { ...this.props.selectedVehicle};\n        let selectedItemsList = Object.values(selectedItems);\n        let selectedKeyItemsList = Object.keys(selectedItems);\n\n        if(selectedItemsList.length >0){\n          return selectedKeyItemsList.forEach((selectedKey) =>{\n            if(obItem.desno.toLowerCase() === selectedKey.toLowerCase()){\n              return obItem.data.VbyDdata.forEach( (shipData) => {\n                if(shipData.name.toLowerCase() === selectedItems[selectedKey].toLowerCase()){\n                  if(this.updatedState.length === 0){\n                    let updatestate = {}\n                    updatestate.name = shipData.name.toLowerCase();\n                    updatestate.updated = true; \n                    this.updatedState.push(updatestate)\n                    this.setState(updatestate);\n                    shipData.total_no = shipData.total_no-1;\n                    return;\n                  }\n                }\n              })\n            }\n          })\n        }\n\n\n      } \n      return targetListdata = Object(obItem.data.VbyDdata);\n    });\n\n    return targetListdata\n  }\n\n  render() {\n    return (\n      <Fragment>\n      <div className={this.containerClass} id={'destination_'+this.props.id}\n        data-destination-container\n      >\n        <div className=\"destination-box_top\">\n          <span className=\"destination-box_top_title\">\n            Destination { this.props.id }\n          </span>\n          <div className=\"destination-box_dropdown\" >\n            <select id={this.selectClass} onChange={this.onSelectPlanet} value={this.props.value}\n              className='dropdown'\n            >\n              <option value='0'>Choose from the option</option>\n              {\n                this.props.planets.map((planet,index) => { \n                  return <option value={planet.name}\n                              key={index}\n                              distance={planet.distance}\n                              index={index} \n                            >\n                                {planet.name}\n                            </option>\n                })\n              }\n              </select>\n          </div>\n        </div>\n        {\n          (this.props.vehicles.length > 0 ) ? (\n            <div className=\"destination-box_bottom\" data-radio-wrapper>\n              <div className=\"vehicles\" data-type=\"vehicles-checkbox\" data-radio-checkbox id={'vehicles_'+this.props.id}>\n                <fieldset id={'vehicles_group_'+this.props.id} onChange={this.onSelectVehicles}>\n                {\n                  this.getFilteredVehicles(this.props.name).map((vehicle,index)=>{\n                    return <VehicleRadio vehicle={vehicle} \n                      groupid={'vehicles_group_'+this.props.id}\n                      name={this.props.name}\n                      index={index} id={index+1} key={index} \n                      ></VehicleRadio>\n                  })\n                }\n                </fieldset>\n              </div>\n            </div>\n          ) : (\n            'No vehicle data'\n          )\n        }\n      </div>   \n      </Fragment>\n    )\n  }\n}\n","/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/VehicleRadio.js",[],"/Users/meiliizzsuju/Documents/shippit/finding-falcone2/src/components/Calculate.js",[],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/index.js",[],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/App.js",["58"],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/reportWebVitals.js",[],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/PlanetDropdown.js",["59"],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/Calculate.js",[],"/Users/meiliizzsuju/Documents/webs/Learning/frontend-challenge_meiliizzsuju/src/components/VehicleRadio.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":10,"column":45,"nodeType":"70","messageId":"71","endLine":10,"endColumn":46},{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":10,"column":45,"nodeType":"70","messageId":"71","endLine":10,"endColumn":46},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]